# -*- coding: utf-8 -*-
"""strings.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W-brD82GYikiS-3Do7NBAsNWaATNS0rj

## What is String in Python?
A string is a sequence of characters.
A character is simply a symbol.
for example the english letters a:z & A:Z

## How to create a string in Python?
"""

single_quote = 'Single quote allow you to embed "double" quotes in your string.'
double_quote = "Double quote allow you to embed 'single' quotes in your string."

triple_quote = """Triple quotes allows to embed "double quotes" as well as 'single quotes' in your string.
And can also span across multiple lines. lllllllllllllllllllllllllllllllllllllllllllll
kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk"""

triple_quote = '''Triple quotes allows to embed "double quotes" as well as 'single quotes' in your string.
And can also span across multiple lines.'''
print(triple_quote)

"""## Good To Know
Computers do not deal with characters, they deal with numbers (binary). Even though you may see characters on your screen, internally it is stored and manipulated as a combination of 0s and 1s.
This conversion of character to a number is called encoding, and the reverse process is decoding. ASCII and Unicode are some of the popular encodings used.
<img src="assets/images/encode_decode_string.png">
<img src="assets/images/hi_there_encoded.png">
"""

message = b"\x48\x69\x20\x54\x68\x65\x72\x65\x21"
print(message.decode("utf-8"))

"""## Emoji Unicode Tables
`https://apps.timwhitlock.info/emoji/tables/unicode`
<img src="assets/images/emoji.png">

"""

print(b"\xF0\x9F\x98\x83 \xF0\x9F\x98\x89")

# in order to display them correctly you have to convert them to string
print(b"\xF0\x9F\x98\x83 \xF0\x9F\x98\x89".decode())

# or you can tell python that you wantto print Unicode char replace U+ > \U000
print("\U0001F601")

"""## Indexing and slicing in Python
<img src="assets/images/string_index.png">
as we  said before the string is a sequence of chars
To access characters in a string we have two ways:
<ul>
<li> Positive index number</li>
<li> Negative index number</li>
</ul>
"""

sample_string = "Python"
print(f"the ele stored at inded 0 is {sample_string[0]}")
print(f"the ele stored at inded 1 is {sample_string[1]}")
print(f"the ele stored at inded 5 is {sample_string[5]}")

print(f"the ele stored at inded -1 is {sample_string[-1]}")
print(f"the ele stored at inded -2 is {sample_string[-2]}")
print(f"the ele stored at inded -6 is {sample_string[-6]}")

"""## what will happens if we try to access element that not exist?
python will not allow access to this index which means that python is a very secure language, In other programming languages like c/cpp there's no memory protection so  the app will return garbage date from the memory.
> good to know there are  new programming languages like rust created especially to solve this kind of problems.
"""

print(sample_string[100]) #Error the string only contains indexs from 0 to 5

"""#### String Slicing
Slicing in python is used for accessing parts of a sequence.
We use slicing when we require a part of a string and not the complete string.
<br>
The syntax for range slicing is the following:<br>
<strong style="color:red;">[Start index (included): Stop index (excluded)]</strong>
"""

sentence = "hello world"
for i in range(len(sentence)):
    print(i ,end= " ")

print()
for char in sentence:
    print(char ,end= " ")

first_word = sentence[0:5]
second_word = sentence[6:11]
print(first_word)
print(second_word)

print(sentence[-3:])

print(sentence[:5]) # it will assume the start is 0

print(sentence[2:]) # it will assume the end is len(sentence)

print(sentence[:]) # take the whole string

# you can add step
sentence = "hello world"
part = sentence[2:7:2] # 2,4,6
print(part)

"""## Reverse String"""

sentence = "hello world"
reversed_sentence = sentence[::-1]
print(reversed_sentence)

"""## String Concatination
you can add strings togother to generate new string
"""

fname = "mohamed"
lname = "yehia"
full_name = fname + " " + lname
print(full_name)

# you can't add string to int/float
print("hello"+2) # error

# but you can convert it first
print("hello"+str(2))

"""## String Repetation"""

print("mohamed "*5)

print("*"*20)

"""## To get how many chars in the string you can use <strong style="color:red;"> len(seq)</strong>
len function return integer you can store it in a var or print it.

"""

s1 = "mohamed"
print(len(s1))
email = "me@gmail.com"
email_length = len(email)
print(email_length)

s1 = "mohamed"
for i in range(len(s1)): # 0, 7
    print(f"letter {s1[i]} stored at index {i}")

"""## Itrate Over String
its better to check these examples on the visualizer
`https://pythontutor.com/visualize.html#mode=edit`
"""

name = "mohamed"
for char in name: # char is gust any variable name you can use i
    print(char)
print("***************************")
for i in name:
    print(i)
print("***************************")
for x in range(len(name)):
    print(name[x])

"""## Q. counts the number of times the word "dog" occurs in a string.
s = This dog runs faster than the other dog dude
"""

s = "This dog runs faster than the other dog dude."

s = "This dog runs faster than the other dog dude."
word = ""
counts = 0
for letter in s:
    if letter == " ":
        if  word == "dog":
            counts = counts +1
        word = ""
    else:
        word = word + letter
print(counts)

"""## Q.
write a program to find the summation of the following numbers
2+22+222+2222+......
ask the user to enter the maximum digits contained in the number for example if the user typed 2 you should display the summation of
2+22
if the user typed 3:
2+22+222
and so on

"""

number = int(input("pls enter number:"))
result = 0
for i in range(1, number+1):
    result = result + int("2"*i)
print(result)

"""## String Methods
most of the string methods create an Operation on it without changing it but instead, it returns a modified version of the string depend on the operation.
for example:
"""

original = "Hello World"
modified = original.lower()
print(f"the original string: {original}")
print(f"the modified string: {modified}")

"""#### Case Related"""

x = "heLLO worLD"
print("x.lower()---->", x.lower())
print("x.upper()---->", x.upper())
print("x.capitalize()---->", x.capitalize())
print("x.title()---->", x.title())
print("x.swapcase()---->", x.swapcase())

"""## Q. ask the user to enter his user name and password if the user name is admin and the password is admin display you can access the system message the username is case insensitive"""

username = input("pls enter name:").lower()
password = input("pls enter password:")
if username == "admin" and password == "ADmin123":
    print("you can access")
else:
    print("username or password may be in correct.")

"""## Q.Write a program that asks the user to enter a word and then capitalizes every other letter of that word. So if the user enters rhinoceros , the program should print rHiNoCeRoS."""

text = input("text:")
new_text = ""
for i in range(len(text)):
    if i%2 == 0:
        new_text = new_text + text[i].lower()
    else:
        new_text = new_text + text[i].upper()
print(new_text)

"""#### Get Index Of Sub String"""

email = "foo@foo.com"
print(email.index("@"))
print(email.index("com"))

## be careful when use the index method
email.index("z") # this will generate error because the string not contains z char

# instead you sshould check first if the char exist in the string
email = "foo@foo.com"
target_string = 'c'
if target_string in email:
    index = email.index(target_string)
    print(index)
else:
    print("not exist")

"""## Q.Write a program that extract the domain name from the email?
email format: usename @ domainname
<br>
ex1: "info@souq.com" > domain:souq.com
<br>
ex2: "m.yehia@artronix.net" > artronix.net
"""

s= "info@souq.com"
# put your code here.
if "@" in s:
    domain = s[s.index("@")+1:]
    print(domain)
else:
    print("not valid email")

"""## String Ends
<li>strip(seq): remove seq from left and right</li>
<li>lstrip(seq): remove seq from left</li>
<li>rstrip(seq): remove seq fromright</li>
"""

name = input("pls enter name>") # " mohamed"
if name == "mohamed":
    print("wel")
else:
    print("kkkkkkkkkkk")

x = "      hello world     "
print(x.strip()) # remove spaces from the left/right side of the string
print(x.lstrip()) # remove spaces from the left side of the string
print(x.rstrip()) # remove spaces from the right side of the string

print("*mohamed*".strip("*")) # remove * from the left/right side of the string
print("mohamed".lstrip("m")) # remove m from the left side of the string
print("mohamed".rstrip("ed")) # remove ed from the right side of the string
print("mohamed  ".rstrip("ed")) # ?

"""## Q. ask the user to enter his user name and password if the user name is admin and the password is admin display you can access the system message the username is case insensitive(also ignore spaces)

"""



"""#### Number Validation"""

age = int(input("please enter your age")) # this line may generate errors if the user enters unvalid number like 50y

'''
   S.isdigit() -> bool
   Return True if all characters in S are digitsand there is at least one character in S, False otherwise.
'''
x = "123"
print(x.isdigit())
y = "123s"
print(y.isdigit())
y = "12.3"
print(y.isdigit())

"""## Q. solve the problem in the above age problem(invalid age)"""

age_str = input("pls enter your age:")
if age_str.isdigit():
    age = int(age_str)
    print("correct age")
else:
    print("pls enter valid age")

s = "This dog runs faster than the other dog dude"
dog_counts = s.count("dog")
print("the string contain ", dog_counts, "dogs")
msg = "the string contain "+str(dog_counts)+" dogs"
print(msg)

dna = "AACCTGAAAACCTAAA"
print(dna.count("AAA"))

"""#### String Formating"""

s = "This dog runs faster than the other dog dude"
dog_counts = s.count("dog")
print(f"the string contains {dog_counts} dogs") # python3
print("the string contain {} {}".format(dog_counts, "dogs"))

fname = "mohamed"
lname = "yehia"
print("your first name is {} and your last\
name is {} and your full name is {}".format(fname, lname, fname+" "+lname) )

"""#### Check Start/End"""

gps_packet = "$GPGGA,172814.0,3723.46587704,N,12202.26957864,W,2,6,1.2,18.893,M,-25.669,M,2.0,0031*4F"
print(gps_packet.startswith("$GPGGA"))
print(gps_packet.endswith("4F"))
print(gps_packet.endswith("mohamed"))
file_name = "book.txt"
if file_name.endswith("csv"):
    print("this a csv file")
elif file_name.endswith("txt"):
    print("this a txt file")
else:
    print("not supported type")

## note you can use slicing to check the ends0
file_name = "book.txt"
if file_name[-3:] == "txt":
    print("this a txt file ")

"""## in vs =="""

print("llo" in "hello world")

name = "mohamed"
full_name = "mohamed yehia"
print(name == full_name) # check if string name is a sub string of string full_name
print(name in full_name)
print(full_name in name)
name = "Mohamed"
print(name in full_name)

"""#### String Replace"""

x = "hello world"
new = x.replace("world" , "mohamed") # replace the word world in the string x by mohamed
print(new)

x = "hello world"
new = x.replace("l" , "mohamed ") # replace the char l in the string x by mohamed
print(new)

"""Q.Companies often try to personalize their offers to make them more attractive. One simple
way to do this is just to insert the person’s name at various places in the offer. Of course,
companies don’t manually type in every person’s name; everything is computer-generated.
Write a program that asks the user for their name and then generates an offer like the one
below. For simplicity’s sake, you may assume that the person’s first and last names are one
word each.


Dear {full_name},
I am pleased to offer you our new Platinum Plus Rewards card
at a special introductory APR of 47.99%. {fname}, an offer
like this does not come along every day, so I urge you to call
now toll-free at 1-800-314-1592. We cannot offer such a low
rate for long, {fname}, so call right away.
"""

fname = input("pls enter fname").capitalize()
lname = input("pls enter lname").capitalize()
full_name = fname+" " + lname
msg = f'''Dear {full_name},
I am pleased to offer you our new Platinum Plus Rewards card
at a special introductory APR of 47.99%. {fname}, an offer
like this does not come along every day, so I urge you to call
now toll-free at 1-800-314-1592. We cannot offer such a low
rate for long, {fname}, so call right away.'''
print(msg)

"""#### Split(seq) and Join"""

gps_packet = "$GPGGA,172814.0,3723.46587704,N,12202.26957864,W,2,6,1.2,18.893,M,-25.669,M,2.0,0031*4F"
splited_data = gps_packet.split(",")
print(splited_data)
print(type(splited_data))

words = ["hello" , "world" , "hello"]
full_str = "".join(words) # "sep".join(list/array of strings)
print(full_str)
full_str = " ".join(words) # "sep".join(list/array of strings)
print(full_str)
full_str = "*".join(words) # "sep".join(list/array of strings)
print(full_str)
full_str = "****333 ###".join(words) # "sep".join(list/array of strings)
print(full_str)

"""## Q. write code to formate the email as follow
input:mohamed.yehia@gmail.com
excepected output :mo***********@gmail.com
"""

email = "mohamed.yehia@gmail.com"
formated_email = ""
print(f"We sent you a code to your email {formated_email}")

"""## Q. write code to validate the user password any password should contain the following:
<li>one upper case letter</li>
<li>one lower case letter</li>
<li>one digit</li>
<li>password length >= 8</li>
<li>contain speacial char @#$%^&* </li>
<br>
for example:
<br>
"Hello1234#" > valid
<br>
"hello1234" > not valid > no uper case letter and no speacial chars
<br>
"He12@" > not valid > length < 8
"""

password = "hello1234"
contain_upper_case_letter = False
contain_lower_case_letter = False
contain_speacial_letter = False
contain_digit_letter = False
if len(password) >= 8:
    for letter in password:
        if letter in "@#$%^&*()":
            contain_speacial_letter = True
        elif letter in "0123456789":
            contain_digit_letter = True
        elif letter in "a..........z":
            contain_lower_case_letter = True
        elif letter in "A..........Z":
            contain_upper_case_letter = True
if len(password) < 8:
    print("password should be at lest 8 digit")
elif contain_upper_case_letter == False:
    print("password should contain upper case letter")
elif contain_lower_case_letter == False:
    print("password should contain lower case letter")
elif contain_speacial_letter == False:
    print("password should contain speacial letter")
elif contain_digit_letter == False:
    print("password should contain digit letter")
else:
    print("valid email")